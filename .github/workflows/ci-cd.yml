name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: go-fiber-api
  REPO_NAME: go-fiber-api
  IMAGE_NAME: go-fiber-api

jobs:
  build:
    name: Build, Lint, Test, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Dependencies
        run: |
          go mod download

      - name: Lint Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.2
          args: --timeout 5m

      - name: Run Tests
        run: |
          go test ./...

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA .
          docker tag asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest

      - name: Push Docker Image
        run: |
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --update-env-vars ENV_VAR_1=value1,ENV_VAR_2=value2

        if: github.ref == 'refs/heads/main'

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const context = github.context;
            const issueTitle = `Deployment failed for commit ${context.sha}`;
            const issueBody = `An error occurred while deploying commit ${context.sha}.\n\nPlease check the GitHub Actions logs for details.`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
            });
